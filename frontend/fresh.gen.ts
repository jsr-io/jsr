// DO NOT EDIT. This file is generated by Fresh.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import * as $_scope_index from "./routes/@[scope]/index.tsx";
import * as $_scope_index_1 from "./routes/@[scope]/~/index.tsx";
import * as $_scope_members from "./routes/@[scope]/~/members.tsx";
import * as $_scope_settings from "./routes/@[scope]/~/settings.tsx";
import * as $_404 from "./routes/_404.tsx";
import * as $_500 from "./routes/_500.tsx";
import * as $_app from "./routes/_app.tsx";
import * as $_layout from "./routes/_layout.tsx";
import * as $_middleware from "./routes/_middleware.ts";
import * as $account_index from "./routes/account/index.tsx";
import * as $account_invites from "./routes/account/invites.tsx";
import * as $account_settings from "./routes/account/settings.tsx";
import * as $account_tokens_create from "./routes/account/tokens/create.tsx";
import * as $account_tokens_index from "./routes/account/tokens/index.tsx";
import * as $admin_middleware from "./routes/admin/_middleware.ts";
import * as $admin_index from "./routes/admin/index.tsx";
import * as $admin_publishingTasks from "./routes/admin/publishingTasks.tsx";
import * as $admin_scopes from "./routes/admin/scopes.tsx";
import * as $admin_users from "./routes/admin/users.tsx";
import * as $auth from "./routes/auth.tsx";
import * as $badges_package from "./routes/badges/package.ts";
import * as $badges_package_score from "./routes/badges/package_score.ts";
import * as $badges_scope from "./routes/badges/scope.ts";
import * as $docs_id_ from "./routes/docs/[...id].tsx";
import * as $docs_index from "./routes/docs/index.ts";
import * as $go_id_ from "./routes/go/[id].ts";
import * as $index from "./routes/index.tsx";
import * as $login from "./routes/login.tsx";
import * as $logout from "./routes/logout.tsx";
import * as $new from "./routes/new.tsx";
import * as $package_all_symbols from "./routes/package/all_symbols.tsx";
import * as $package_dependencies from "./routes/package/dependencies.tsx";
import * as $package_dependents from "./routes/package/dependents.tsx";
import * as $package_doc_file_ from "./routes/package/doc/[file].tsx";
import * as $package_doc_symbol_ from "./routes/package/doc/[symbol].tsx";
import * as $package_index from "./routes/package/index.tsx";
import * as $package_og from "./routes/package/og.ts";
import * as $package_publish from "./routes/package/publish.tsx";
import * as $package_score from "./routes/package/score.tsx";
import * as $package_settings from "./routes/package/settings.tsx";
import * as $package_source from "./routes/package/source.tsx";
import * as $package_versions from "./routes/package/versions.tsx";
import * as $packages from "./routes/packages.tsx";
import * as $publishing_deny from "./routes/publishing/deny.tsx";
import * as $publishing_index from "./routes/publishing/index.tsx";
import * as $status from "./routes/status.tsx";
import * as $user_id_ from "./routes/user/[id].tsx";
import * as $waitlist from "./routes/waitlist.tsx";
import * as $Authorize from "./islands/Authorize.tsx";
import * as $CopyButton from "./islands/CopyButton.tsx";
import * as $DevelopmentLogin from "./islands/DevelopmentLogin.tsx";
import * as $GitHubActionsLink from "./islands/GitHubActionsLink.tsx";
import * as $GithubUserLink from "./islands/GithubUserLink.tsx";
import * as $GlobalSearch from "./islands/GlobalSearch.tsx";
import * as $HeaderLogo from "./islands/HeaderLogo.tsx";
import * as $HomepageHeroParticles from "./islands/HomepageHeroParticles.tsx";
import * as $PublishingTaskRequeue from "./islands/PublishingTaskRequeue.tsx";
import * as $UserManageScopeInvite from "./islands/UserManageScopeInvite.tsx";
import * as $UserMenu from "./islands/UserMenu.tsx";
import * as $admin_ScopeEdit from "./islands/admin/ScopeEdit.tsx";
import * as $admin_UserEdit from "./islands/admin/UserEdit.tsx";
import * as $new_1 from "./islands/new.tsx";
import * as $_scope_islands_ScopeInviteForm from "./routes/@[scope]/(_islands)/ScopeInviteForm.tsx";
import * as $_scope_islands_ScopeMemberRole from "./routes/@[scope]/(_islands)/ScopeMemberRole.tsx";
import * as $account_tokens_islands_CreateToken from "./routes/account/tokens/(_islands)/CreateToken.tsx";
import * as $account_tokens_islands_RevokeToken from "./routes/account/tokens/(_islands)/RevokeToken.tsx";
import * as $package_islands_BreadcrumbsSticky from "./routes/package/(_islands)/BreadcrumbsSticky.tsx";
import * as $package_islands_LocalSymbolSearch from "./routes/package/(_islands)/LocalSymbolSearch.tsx";
import * as $package_islands_PackageDescriptionEditor from "./routes/package/(_islands)/PackageDescriptionEditor.tsx";
import * as $package_islands_PackageGitHubSettings from "./routes/package/(_islands)/PackageGitHubSettings.tsx";
import * as $publishing_islands_OverallStatus from "./routes/publishing/(_islands)/OverallStatus.tsx";
import * as $publishing_islands_publishing from "./routes/publishing/(_islands)/publishing.tsx";
import { type Manifest } from "$fresh/server.ts";

const manifest = {
  routes: {
    "./routes/@[scope]/index.tsx": $_scope_index,
    "./routes/@[scope]/~/index.tsx": $_scope_index_1,
    "./routes/@[scope]/~/members.tsx": $_scope_members,
    "./routes/@[scope]/~/settings.tsx": $_scope_settings,
    "./routes/_404.tsx": $_404,
    "./routes/_500.tsx": $_500,
    "./routes/_app.tsx": $_app,
    "./routes/_layout.tsx": $_layout,
    "./routes/_middleware.ts": $_middleware,
    "./routes/account/index.tsx": $account_index,
    "./routes/account/invites.tsx": $account_invites,
    "./routes/account/settings.tsx": $account_settings,
    "./routes/account/tokens/create.tsx": $account_tokens_create,
    "./routes/account/tokens/index.tsx": $account_tokens_index,
    "./routes/admin/_middleware.ts": $admin_middleware,
    "./routes/admin/index.tsx": $admin_index,
    "./routes/admin/publishingTasks.tsx": $admin_publishingTasks,
    "./routes/admin/scopes.tsx": $admin_scopes,
    "./routes/admin/users.tsx": $admin_users,
    "./routes/auth.tsx": $auth,
    "./routes/badges/package.ts": $badges_package,
    "./routes/badges/package_score.ts": $badges_package_score,
    "./routes/badges/scope.ts": $badges_scope,
    "./routes/docs/[...id].tsx": $docs_id_,
    "./routes/docs/index.ts": $docs_index,
    "./routes/go/[id].ts": $go_id_,
    "./routes/index.tsx": $index,
    "./routes/login.tsx": $login,
    "./routes/logout.tsx": $logout,
    "./routes/new.tsx": $new,
    "./routes/package/all_symbols.tsx": $package_all_symbols,
    "./routes/package/dependencies.tsx": $package_dependencies,
    "./routes/package/dependents.tsx": $package_dependents,
    "./routes/package/doc/[file].tsx": $package_doc_file_,
    "./routes/package/doc/[symbol].tsx": $package_doc_symbol_,
    "./routes/package/index.tsx": $package_index,
    "./routes/package/og.ts": $package_og,
    "./routes/package/publish.tsx": $package_publish,
    "./routes/package/score.tsx": $package_score,
    "./routes/package/settings.tsx": $package_settings,
    "./routes/package/source.tsx": $package_source,
    "./routes/package/versions.tsx": $package_versions,
    "./routes/packages.tsx": $packages,
    "./routes/publishing/deny.tsx": $publishing_deny,
    "./routes/publishing/index.tsx": $publishing_index,
    "./routes/status.tsx": $status,
    "./routes/user/[id].tsx": $user_id_,
    "./routes/waitlist.tsx": $waitlist,
  },
  islands: {
    "./islands/Authorize.tsx": $Authorize,
    "./islands/CopyButton.tsx": $CopyButton,
    "./islands/DevelopmentLogin.tsx": $DevelopmentLogin,
    "./islands/GitHubActionsLink.tsx": $GitHubActionsLink,
    "./islands/GithubUserLink.tsx": $GithubUserLink,
    "./islands/GlobalSearch.tsx": $GlobalSearch,
    "./islands/HeaderLogo.tsx": $HeaderLogo,
    "./islands/HomepageHeroParticles.tsx": $HomepageHeroParticles,
    "./islands/PublishingTaskRequeue.tsx": $PublishingTaskRequeue,
    "./islands/UserManageScopeInvite.tsx": $UserManageScopeInvite,
    "./islands/UserMenu.tsx": $UserMenu,
    "./islands/admin/ScopeEdit.tsx": $admin_ScopeEdit,
    "./islands/admin/UserEdit.tsx": $admin_UserEdit,
    "./islands/new.tsx": $new_1,
    "./routes/@[scope]/(_islands)/ScopeInviteForm.tsx":
      $_scope_islands_ScopeInviteForm,
    "./routes/@[scope]/(_islands)/ScopeMemberRole.tsx":
      $_scope_islands_ScopeMemberRole,
    "./routes/account/tokens/(_islands)/CreateToken.tsx":
      $account_tokens_islands_CreateToken,
    "./routes/account/tokens/(_islands)/RevokeToken.tsx":
      $account_tokens_islands_RevokeToken,
    "./routes/package/(_islands)/BreadcrumbsSticky.tsx":
      $package_islands_BreadcrumbsSticky,
    "./routes/package/(_islands)/LocalSymbolSearch.tsx":
      $package_islands_LocalSymbolSearch,
    "./routes/package/(_islands)/PackageDescriptionEditor.tsx":
      $package_islands_PackageDescriptionEditor,
    "./routes/package/(_islands)/PackageGitHubSettings.tsx":
      $package_islands_PackageGitHubSettings,
    "./routes/publishing/(_islands)/OverallStatus.tsx":
      $publishing_islands_OverallStatus,
    "./routes/publishing/(_islands)/publishing.tsx":
      $publishing_islands_publishing,
  },
  baseUrl: import.meta.url,
} satisfies Manifest;

export default manifest;
